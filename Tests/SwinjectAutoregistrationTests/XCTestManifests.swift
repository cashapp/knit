#if !canImport(ObjectiveC)
import XCTest

extension AutoregistrationTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__AutoregistrationTests = [
        ("testLoggingFunctionIsNotErased", testLoggingFunctionIsNotErased),
        ("testServiceIsRegisteredWithEightDependencies", testServiceIsRegisteredWithEightDependencies),
        ("testServiceIsRegisteredWithFiveDependencies", testServiceIsRegisteredWithFiveDependencies),
        ("testServiceIsRegisteredWithFourDependencies", testServiceIsRegisteredWithFourDependencies),
        ("testServiceIsRegisteredWithFourDynamicArguments", testServiceIsRegisteredWithFourDynamicArguments),
        ("testServiceIsRegisteredWithNineDependencies", testServiceIsRegisteredWithNineDependencies),
        ("testServiceIsRegisteredWithOneDependency", testServiceIsRegisteredWithOneDependency),
        ("testServiceIsRegisteredWithOneDynamicArgument", testServiceIsRegisteredWithOneDynamicArgument),
        ("testServiceIsRegisteredWithOptionalDependencies", testServiceIsRegisteredWithOptionalDependencies),
        ("testServiceIsRegisteredWithSevenDependencies", testServiceIsRegisteredWithSevenDependencies),
        ("testServiceIsRegisteredWithSixDependencies", testServiceIsRegisteredWithSixDependencies),
        ("testServiceIsRegisteredWithThreeDependencies", testServiceIsRegisteredWithThreeDependencies),
        ("testServiceIsRegisteredWithThreeDynamicArguments", testServiceIsRegisteredWithThreeDynamicArguments),
        ("testServiceIsRegisteredWithTwentyDependencies", testServiceIsRegisteredWithTwentyDependencies),
        ("testServiceIsRegisteredWithTwoDependencies", testServiceIsRegisteredWithTwoDependencies),
        ("testServiceIsRegisteredWithTwoDynamicArguments", testServiceIsRegisteredWithTwoDynamicArguments),
        ("testServiceIsRegisteredWithUnwrrappedDependencies", testServiceIsRegisteredWithUnwrrappedDependencies),
        ("testServiceIsRegisteredWithZeroDependencies", testServiceIsRegisteredWithZeroDependencies),
    ]
}

extension OperatorsTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__OperatorsTests = [
        ("testResolvingOptionalServiceUsingInfixOperator", testResolvingOptionalServiceUsingInfixOperator),
        ("testResolvingOptionalServiceWithPostfixOperator", testResolvingOptionalServiceWithPostfixOperator),
        ("testResolvingServiceUsingDeprecatedInfixOperators", testResolvingServiceUsingDeprecatedInfixOperators),
        ("testResolvingServiceUsingInfixOperator", testResolvingServiceUsingInfixOperator),
        ("testResolvingServiceUsingInfixOperatorWith1DynamicArgument", testResolvingServiceUsingInfixOperatorWith1DynamicArgument),
        ("testResolvingServiceUsingInfixOperatorWith2DynamicArguments", testResolvingServiceUsingInfixOperatorWith2DynamicArguments),
        ("testResolvingServiceUsingInfixOperatorWith3DynamicArguments", testResolvingServiceUsingInfixOperatorWith3DynamicArguments),
        ("testResolvingServiceUsingInfixOperatorWithName", testResolvingServiceUsingInfixOperatorWithName),
        ("testResolvingServiceUsingInfixOperatorWithNameAnd1DynamicArgument", testResolvingServiceUsingInfixOperatorWithNameAnd1DynamicArgument),
        ("testResolvingServiceUsingInfixOperatorWithNameAnd2DynamicArguments", testResolvingServiceUsingInfixOperatorWithNameAnd2DynamicArguments),
        ("testResolvingServiceUsingInfixOperatorWithNameAnd3DynamicArguments", testResolvingServiceUsingInfixOperatorWithNameAnd3DynamicArguments),
        ("testResolvingServiceUsingPostfixOperator", testResolvingServiceUsingPostfixOperator),
    ]
}

public func __allTests() -> [XCTestCaseEntry] {
    return [
        testCase(AutoregistrationTests.__allTests__AutoregistrationTests),
        testCase(OperatorsTests.__allTests__OperatorsTests)
    ]
}
#endif
